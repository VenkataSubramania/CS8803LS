train_params:
  detach_kp_generator: False
  detach_kp_discriminator: True
  num_epochs: 80
  epoch_milestones: [16]
  lr: 2.0e-4
  batch_size: 16
  loss_weights:
    reconstruction: [10, 10, 10, 10, 1]
    reconstruction_deformed: 0
    generator_gan: 1
    discriminator_gan: 1
  log_params:
    log_freq_iter: 200
    cpk_freq_epoch: 10

dataset_params: #Parameters of the dataset
  root_dir: data/shapes #Directory containing test and train subfolders with videos, it can be '.gif' or '.mp4' videos or stacked frames (see data/shapes)
  image_shape: [64, 64, 3] #Shape of individual image for stacked frames
  augmentation_params: #Parameters for train time augmentation
    flip_param:
      time_flip: False #Fliping the order of frames in video
      horizontal_flip: True #Horizontal flipping
    crop_param:
      size: [64, 64] #Random cropping to this size
    resize_param:
      ratio: [0.9, 1.1] #Random resizing in this range
    jitter_param:
      hue: 0.5 #Random hue jittering
    rotation_param:
      degrees: [-10, 10] #Random rotate in this range of degrees

model_params: #Parameters of the Monkey-Net
  common_params:
    num_channels: 3 #number of channels in image
  generator_params:
    block_expansion: 16 #Multiplier for number of neurons
    max_features: 512 #Maximum number of neurons
    num_blocks: 5 #Number of blocks in UNET
    num_refinement_blocks: 4 #Number of additional ResBlocks at the end
    dense_motion_params:
      block_expansion: 32 #Multiplier for number of neurons
      max_features: 512 #Maximum number of neuro
      num_blocks: 5 #Number of blocks in UNET
      use_mask: True #True for predicting coarse motion
      use_correction: True #True for predicting fine motion
      mask_embedding_params: #Parameters of the input to dense_motion module
        use_heatmap: True #Heatmap representation of keypoints
        use_deformed_source_image: True #Aproximate deformation of the source image
        heatmap_type: 'difference' #Heatmap is the difference between driving an a source frame
        norm_const: 100 #Normalization constant \alpha, 'sum' for using sum normalization
      num_group_blocks: 2 #Number of initial group blocks
    kp_embedding_params: #Parameters of the keypoint input to the generator
      use_heatmap: True #Heatmap representation of keypoints
      norm_const: 100 #Normalization constant \alpha, 'sum' for using sum normalization
      heatmap_type: 'difference' #Heatmap is the difference between driving an a source frame
  discriminator_params:
    kp_embedding_params: #Parameters of the keypoint input to the discriminator
      norm_const: 100 #Normalization constant \alpha, 'sum' for using sum normalization
    block_expansion: 32 #Multiplier for number of neurons
    max_features: 256 #Maximum number of neurons
    num_blocks: 4 #Number of blocks
  content_encoder_params:
    block_expansion: 16
    num_blocks: 5
    max_features: 512
  motion_encoder_params:
    block_expansion: 16
    num_blocks: 5
    max_features: 512
  decoder_params:
  sequence_model_params:

infer_params:
  batch_size: 4
  log_params:
    log_freq_iter: 1 # Log progress this number of iterations
    cpk_freq_epoch: 5000 # Save checkpoint this number of epochs

analysis_params:
  batch_size: 1
  log_params:
    log_freq_iter: 1 # Log progress this number of iterations
    cpk_freq_epoch: 5000 # Save checkpoint this number of epochs

reconstruction_params: #Parameters for reconstruction task
  num_videos: null #Number of videos to use in reconstruction, null for all avaliable
  format: '.gif' #Number for saving videos '.gif' or '.mp4', the final results will be also saved in loosless '.png'

transfer_params: #Parameters for transfer task
  batch_size: 1
  log_params:
    log_freq_iter: 1 # Log progress this number of iterations

visualizer_params: # Visualization parameters
  kp_size: 2 #Size of keypoint in visualization
  draw_border: False #True to draw a white border around each image
  colormap: 'gist_rainbow' #Colormap for keypoints
